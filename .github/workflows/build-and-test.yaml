name: build, test, and deploy codebase

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: [ubuntu-latest]
    timeout-minutes: 5

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      # - name: Archive production artifacts
      #   run: tar -czf nextjs-build.tar.gz .next package.json package-lock.json next.config.mjs
      - name: Archive production artifacts
        run: tar -czf nextjs-build.tar.gz .next public package.json package-lock.json next.config.mjs

      - name: Deploy to DigitalOcean Droplet
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no nextjs-build.tar.gz root@$DROPLET_IP:/root/
          ssh -o StrictHostKeyChecking=no root@$DROPLET_IP << 'EOF'
            mkdir -p /var/www/nextjs
            tar -xzf /root/nextjs-build.tar.gz -C /var/www/nextjs
            cd /var/www/nextjs
            npm install --production
            pm2 restart nextjs || pm2 start npm --name "nextjs" -- start -- -p 80
          EOF

      - name: Notify Slack on Success
        if: success()
        id: slack-success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "프론트-배포",
              "attachments": [
                {
                  "color": "#36a64f",
                  "title": "${{ github.repository }} 배포 성공 ✅",
                  "title_link": "https://github.com/${{github.repository}}",
                  "text": "GitHub Action 성공 ✅",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Tag",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Notify Slack on Failure
        if: failure()
        id: slack-failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "프론트-배포",
              "attachments": [
                {
                  "color": "#ff0000",
                  "title": "${{ github.repository }} 배포 실패 ❌",
                  "title_link": "https://github.com/${{github.repository}}",
                  "text": "GitHub Action 실패 ❌",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Tag",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
